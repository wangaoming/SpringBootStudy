<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置目标类 -->
    <bean id="customerDao" class="soft.spring.aspectj.demo2.CustomerDaoImpl" />

    <!-- 配置切面类 -->
    <bean id="myAspectXml" class="soft.spring.aspectj.demo2.MyAspectXml" />

    <!-- aop配置 -->
    <aop:config>
        <!-- 配置切入点 -->
        <aop:pointcut id="savePointcut" expression="execution(* soft.spring.aspectj.demo2.CustomerDao.save(..))"/>
        <aop:pointcut id="updatePointcut" expression="execution(* soft.spring.aspectj.demo2.CustomerDao.update(..))"/>
        <aop:pointcut id="deletePointcut" expression="execution(* soft.spring.aspectj.demo2.CustomerDao.delete(..))"/>
        <aop:pointcut id="findOnePointcut" expression="execution(* soft.spring.aspectj.demo2.CustomerDao.findOne(..))"/>
        <aop:pointcut id="findAllPointcut" expression="execution(* soft.spring.aspectj.demo2.CustomerDao.findAll(..))"/>
        <!-- 配置AOP的切面 -->
        <aop:aspect ref="myAspectXml">
            <!-- 配置前置通知 -->
            <aop:before method="before" pointcut-ref="savePointcut" />
            <aop:before method="before" pointcut-ref="updatePointcut" />
            <aop:after-returning method="afterReturning" pointcut-ref="updatePointcut" returning="result" />
            <aop:around method="around" pointcut-ref="deletePointcut" />
            <aop:after-throwing method="afterThrowing" pointcut-ref="findOnePointcut" throwing="e" />
            <aop:after method="after" pointcut-ref="findAllPointcut" />
        </aop:aspect>
    </aop:config>
 </beans>
